@breakerHeight: 50px;
@breakerWidth: 100px;
@switchWidth: 15px;
@switchToRight: {
    right: 0px;
    box-shadow: -2px calc(@switchWidth * -0.85) 0px 0px black;
}

@switchToLeft: {
    left: 0px;
    box-shadow: -2px calc(@switchWidth * 0.85) 0px 0px black;
}

body {
    box-sizing: border-box;
}

.breaker-box {
    position: relative;
    display: block;
    background-color: #555;// rgb(151, 157, 153);
    width: 400px;
    height: auto;
    left: calc(50% - (400px / 2));
    padding: 25px;
    border: 4px inset dimgrey;
    border-radius: 30px;
    color: whitesmoke;

    .breaker-main {
        position: relative;
        display: block;
        width: calc(@breakerWidth * 2);
        height: @breakerHeight;
        left: calc(50% - @breakerWidth);
        border: 1px inset darkgrey;
        border-radius: 3px;
        background-color: rgb(41, 44, 51);
        padding: 5px;
        margin-bottom: @breakerHeight;

        &::before {
            content: 'Main';
            position: absolute;
            display: block;
            background-color: grey;
            height: @switchWidth;
            width: @breakerHeight;
            right: 0px;
            transform-origin: 50% 50%;
            transform: rotate(-90deg) translateX(calc(@switchWidth / -1));
            text-align: center;
            line-height: @switchWidth;
            padding: 2px;
            box-shadow: -2px calc(@switchWidth * -0.85) 0px 0px black;
        }
    }

    .breaker-panel {
        position: relative;
        display: flex;
        flex-direction: row;
        justify-content: space-evenly;
        flex-wrap: nowrap;
        width: 100%;
        height: 100%;
        min-height: 100px;

        .breaker-panel-column {
            position: relative;
            display: block;
            width: @breakerWidth;
            height: auto;
            margin: 0px;

            .breaker {
                counter-increment: breakerCount 2;
                position: relative;
                display: block;
                width: @breakerWidth;
                height: @breakerHeight;
                border: 1px inset darkgrey;
                border-radius: 3px;
                background-color: rgb(41, 44, 51);
                padding: 5px;
                cursor: pointer;

                &.highlight {
                    /*background-color: lightgreen;*/
                    box-shadow: 0 0 7px gold;
                    border: 1px solid yellow;
                }

                &:hover {
                    background-color: rgba(41, 44, 51, 0.9);
                }

                &::before {
                    content: attr(data-amps);
                    position: absolute;
                    display: block;
                    background-color: grey;
                    height: @switchWidth;
                    width: @breakerHeight;
                    transform-origin: 50% 50%;
                    transform: rotate(-90deg) translateX(calc(@switchWidth / -1));
                    text-align: center;
                    line-height: @switchWidth;
                    padding: 2px;
                }

                &::after {
                    content: counter(breakerCount);
                    position: absolute;
                    line-height: @breakerHeight;
                    color: lightgrey;
                }
            }

            &:nth-of-type(1) {
                counter-reset: breakerCount -1;

                .breaker::after {
                    left: -1.5em;
                }

                .breaker::before {
                    @switchToRight
                    ();
                    transform: rotate(-90deg) translateX(calc(@switchWidth / -1)) scale(-1,-1);
                    box-shadow: 2px calc(@switchWidth * 0.85) 0px 0px black;
                }

                .breaker.off::before {
                    @switchToLeft
                    ();
                    box-shadow: 2px calc(@switchWidth * -0.85) 0px 0px black;
                }
            }

            &:nth-of-type(2) {
                counter-reset: breakerCount 0;

                .breaker::after {
                    right: -1.5em;
                }

                .breaker::before {
                    @switchToLeft
                    ();
                }

                .breaker.off::before {
                    @switchToRight
                    ();
                    left: calc(100% - @breakerHeight);
                }
            }
        }
    }

    .breaker-door {
        position: absolute;
        display: block;
        width: 100%;
        height: 100%;
        min-height: 100px;
        background-color: inherit;
        left: 100%;
        top: 0px;
        border: inherit;
        border-radius: inherit;
        transform-origin: 0px 0px;
        transform: skewY(5deg);

        .breaker-panel {
            top: 135px;
        }

        label {
            counter-increment: breakerCount 2;
            position: relative;
            display: block;
            width: @breakerWidth;
            height: @breakerHeight;
            border-style: solid;
            border-color: black;
            border-width: 2px 0px 2px 0px;
            background-color: rgb(248, 250, 249);
            color: rgb(54, 53, 51);
            line-height: @breakerHeight;
            vertical-align: middle;
            padding: 5px;
            cursor: pointer;

            span {
                position: relative;
                display: block;
                width: 100%;
                height: 45%;
                font-size: 0.75em;
                line-height: calc(@breakerHeight / 2);
                white-space: nowrap;
                overflow: hidden;
                text-overflow: ellipsis;

                &:first-of-type {
                    top: 0px;
                    border-bottom: 1px dashed black;
                }

                &:last-of-type {
                    bottom: 0px;
                }
            }

            &:hover {
                left: -3px;
                box-shadow: 2px 2px 3px 3px rgba(0, 0, 0, 0.35);
                min-width: 100%;
                white-space: nowrap;
                overflow: initial;
                width: auto;
                width: max-content;

                span {
                    min-width: 100%;
                    width: auto;
                    overflow: initial;
                    text-overflow: initial;
                }
            }
        }
    }
}


.overlay {
    position: fixed;
    display: none;
    width: 100vw;
    height: 100vh;
    top: 0px;
    left: 0px;
    background-color: rgba(0, 0, 0, 0.35);

    &.show {
        display: block;
    }

    form {
        @formWidth: 25vw;
        @formHeight: 80vh;
        position: absolute;
        display: block;
        width: calc(@formWidth - 50px);
        height: calc(@formHeight - 50px);
        background-color: whitesmoke;
        left: calc(50vw - (@formWidth / 2));
        top: calc(50vh - (@formHeight / 2));
        border-radius: 10px;
        padding: 25px;
    }
}
